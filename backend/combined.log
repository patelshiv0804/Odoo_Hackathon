{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-24T17:19:09.232Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-24T17:19:09.235Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-24T17:19:09.239Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T02:01:43.762Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T02:01:43.780Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T02:01:43.791Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T02:02:26.323Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T02:02:26.327Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T02:02:26.333Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T02:22:38.920Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T02:22:38.924Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T02:22:38.930Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:01:47.522Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:01:47.526Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:01:47.530Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:06:46.520Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:06:46.524Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:06:46.528Z"}
{"level":"error","message":"Error registering farmer Cannot destructure property 'email' of 'req.body' as it is undefined.","stack":"TypeError: Cannot destructure property 'email' of 'req.body' as it is undefined.\n    at registerFarmer (D:\\hackathon\\backend\\controllers\\farmerController.js:69:17)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\hackathon\\backend\\node_modules\\router\\index.js:295:15\n    at processParams (D:\\hackathon\\backend\\node_modules\\router\\index.js:582:12)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\index.js:291:5)\n    at Function.handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:186:3)","timestamp":"2025-05-25T03:10:12.001Z"}
{"level":"error","message":"TypeError: Cannot destructure property 'email' of 'req.body' as it is undefined.\n    at registerFarmer (D:\\hackathon\\backend\\controllers\\farmerController.js:69:17)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\hackathon\\backend\\node_modules\\router\\index.js:295:15\n    at processParams (D:\\hackathon\\backend\\node_modules\\router\\index.js:582:12)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\index.js:291:5)\n    at Function.handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:186:3)","timestamp":"2025-05-25T03:10:12.006Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:11:14.214Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:11:14.219Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:11:14.226Z"}
{"level":"error","message":"Error registering farmer Cannot destructure property 'email' of 'req.body' as it is undefined.","stack":"TypeError: Cannot destructure property 'email' of 'req.body' as it is undefined.\n    at registerFarmer (D:\\hackathon\\backend\\controllers\\farmerController.js:69:17)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\hackathon\\backend\\node_modules\\router\\index.js:295:15\n    at processParams (D:\\hackathon\\backend\\node_modules\\router\\index.js:582:12)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\index.js:291:5)\n    at Function.handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:186:3)","timestamp":"2025-05-25T03:11:18.357Z"}
{"level":"error","message":"TypeError: Cannot destructure property 'email' of 'req.body' as it is undefined.\n    at registerFarmer (D:\\hackathon\\backend\\controllers\\farmerController.js:69:17)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\hackathon\\backend\\node_modules\\router\\index.js:295:15\n    at processParams (D:\\hackathon\\backend\\node_modules\\router\\index.js:582:12)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\index.js:291:5)\n    at Function.handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:186:3)","timestamp":"2025-05-25T03:11:18.363Z"}
{"level":"error","message":"Error sending password reset email to","timestamp":"2025-05-25T03:15:59.344Z"}
{"code":"EAUTH","command":"API","level":"error","message":"Error requesting password reset Missing credentials for \"PLAIN\"","stack":"Error: Missing credentials for \"PLAIN\"\n    at SMTPConnection._formatError (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:809:19)\n    at SMTPConnection.login (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:454:38)\n    at D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-transport\\index.js:272:32\n    at SMTPConnection.<anonymous> (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:215:17)\n    at Object.onceWrapper (node:events:633:28)\n    at SMTPConnection.emit (node:events:519:28)\n    at SMTPConnection._actionEHLO (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:1371:14)\n    at SMTPConnection._processResponse (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:993:20)\n    at SMTPConnection._onData (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:774:14)\n    at SMTPConnection._onSocketData (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:195:44)","timestamp":"2025-05-25T03:15:59.349Z"}
{"level":"error","message":"Error: Missing credentials for \"PLAIN\"\n    at SMTPConnection._formatError (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:809:19)\n    at SMTPConnection.login (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:454:38)\n    at D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-transport\\index.js:272:32\n    at SMTPConnection.<anonymous> (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:215:17)\n    at Object.onceWrapper (node:events:633:28)\n    at SMTPConnection.emit (node:events:519:28)\n    at SMTPConnection._actionEHLO (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:1371:14)\n    at SMTPConnection._processResponse (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:993:20)\n    at SMTPConnection._onData (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:774:14)\n    at SMTPConnection._onSocketData (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:195:44)","timestamp":"2025-05-25T03:15:59.355Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:17:33.175Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:17:33.180Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:17:33.184Z"}
{"level":"info","message":"Password reset email sent successfully to","timestamp":"2025-05-25T03:17:44.108Z"}
{"level":"info","message":"Password reset email sent successfully to","timestamp":"2025-05-25T03:19:47.179Z"}
{"level":"error","message":"SyntaxError: Expected double-quoted property name in JSON at position 60\n    at JSON.parse (<anonymous>)\n    at parse (D:\\hackathon\\backend\\node_modules\\body-parser\\lib\\types\\json.js:77:19)\n    at D:\\hackathon\\backend\\node_modules\\body-parser\\lib\\read.js:123:18\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at invokeCallback (D:\\hackathon\\backend\\node_modules\\raw-body\\index.js:238:16)\n    at done (D:\\hackathon\\backend\\node_modules\\raw-body\\index.js:227:7)\n    at IncomingMessage.onEnd (D:\\hackathon\\backend\\node_modules\\raw-body\\index.js:287:7)\n    at IncomingMessage.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-05-25T03:20:20.322Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:23:12.471Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:23:12.475Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:23:12.480Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:23:26.842Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:23:26.845Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:23:26.849Z"}
{"level":"info","message":"Password reset email sent successfully to","timestamp":"2025-05-25T03:24:00.214Z"}
{"level":"info","message":"Password reset email sent successfully to","timestamp":"2025-05-25T03:25:11.584Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:29:22.897Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:29:22.901Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:29:22.905Z"}
{"level":"info","message":"Password reset email sent successfully to","timestamp":"2025-05-25T03:29:34.042Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T04:46:59.829Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T04:46:59.835Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T04:46:59.838Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T04:48:33.195Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T04:48:33.199Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T04:48:33.203Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T09:13:02.313Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T09:13:02.316Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T09:13:02.320Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T09:49:50.967Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T09:49:51.000Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T09:49:51.011Z"}
{"level":"error","message":"Error: ENOENT: no such file or directory, open 'D:\\hackathon\\backend\\storage\\images\\Screenshot (5)-1748166809961.png'","timestamp":"2025-05-25T09:53:29.975Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T09:56:03.445Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T09:56:03.449Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T09:56:03.456Z"}
{"level":"error","message":"Error: Python script failed\n    at ChildProcess.<anonymous> (D:\\hackathon\\backend\\controllers\\queryController.js:23:16)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1105:16)\n    at ChildProcess._handle.onexit (node:internal/child_process:305:5)","timestamp":"2025-05-25T09:56:09.393Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T09:59:06.893Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T09:59:06.899Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T09:59:06.904Z"}
{"level":"error","message":"Error: Python script failed\n    at ChildProcess.<anonymous> (D:\\hackathon\\backend\\controllers\\queryController.js:23:16)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1105:16)\n    at ChildProcess._handle.onexit (node:internal/child_process:305:5)","timestamp":"2025-05-25T09:59:10.056Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T10:00:09.155Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T10:00:09.159Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T10:00:09.163Z"}
{"level":"error","message":"Error: Python script failed\n    at ChildProcess.<anonymous> (D:\\hackathon\\backend\\controllers\\queryController.js:23:16)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1105:16)\n    at ChildProcess._handle.onexit (node:internal/child_process:305:5)","timestamp":"2025-05-25T10:00:14.270Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T10:02:48.594Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T10:02:48.598Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T10:02:48.604Z"}
{"level":"error","message":"ReferenceError: voiceScriptPath is not defined\n    at Object.addQuery (D:\\hackathon\\backend\\controllers\\queryController.js:53:62)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async D:\\hackathon\\backend\\routes\\queryRoutes.js:42:9","timestamp":"2025-05-25T10:02:51.596Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T10:04:27.502Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T10:04:27.506Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T10:04:27.509Z"}
{"level":"error","message":"Error: Python script failed\n    at ChildProcess.<anonymous> (D:\\hackathon\\backend\\controllers\\queryController.js:23:16)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1105:16)\n    at ChildProcess._handle.onexit (node:internal/child_process:305:5)","timestamp":"2025-05-25T10:04:35.727Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T10:05:43.514Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T10:05:43.519Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T10:05:43.523Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T12:25:38.670Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T12:25:38.674Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T12:25:38.677Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T12:27:17.576Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T12:27:17.581Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T12:27:17.584Z"}
{"kind":"string","level":"error","message":"Error registering expert Cast to string failed for value \"{ email: 'dummyu291@gmail.com' }\" (type Object) at path \"email\" for model \"Expert\"","path":"email","reason":null,"stack":"CastError: Cast to string failed for value \"{ email: 'dummyu291@gmail.com' }\" (type Object) at path \"email\" for model \"Expert\"\n    at SchemaString.cast (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\schema\\string.js:607:11)\n    at model.Query.<anonymous> (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\schema\\string.js:370:16)\n    at SchemaType._applySetters (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1225:20)\n    at SchemaType.applySetters (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1250:16)\n    at SchemaString.castForQuery (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\schema\\string.js:693:17)\n    at cast (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\cast.js:319:34)\n    at Query.cast (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\query.js:4604:80)","stringValue":"\"{ email: 'dummyu291@gmail.com' }\"","timestamp":"2025-05-25T12:27:40.343Z","value":{"email":"dummyu291@gmail.com"},"valueType":"Object"}
{"level":"error","message":"CastError: Cast to string failed for value \"{ email: 'dummyu291@gmail.com' }\" (type Object) at path \"email\" for model \"Expert\"\n    at SchemaString.cast (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\schema\\string.js:607:11)\n    at model.Query.<anonymous> (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\schema\\string.js:370:16)\n    at SchemaType._applySetters (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1225:20)\n    at SchemaType.applySetters (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1250:16)\n    at SchemaString.castForQuery (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\schema\\string.js:693:17)\n    at cast (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\cast.js:319:34)\n    at Query.cast (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (D:\\hackathon\\backend\\node_modules\\mongoose\\lib\\query.js:4604:80)","timestamp":"2025-05-25T12:27:40.347Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T12:28:40.967Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T12:28:40.971Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T12:28:40.974Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T12:49:29.384Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T12:49:29.388Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T12:49:29.391Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T12:56:34.073Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T12:56:34.077Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T12:56:34.081Z"}
{"level":"error","message":"TypeError: Cannot read properties of undefined (reading 'assignQuery')\n    at setQuery (D:\\hackathon\\backend\\controllers\\queryController.js:103:62)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\hackathon\\backend\\node_modules\\router\\index.js:295:15\n    at processParams (D:\\hackathon\\backend\\node_modules\\router\\index.js:582:12)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\index.js:291:5)\n    at Function.handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:186:3)","timestamp":"2025-05-25T12:58:08.582Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T12:58:57.765Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T12:58:57.768Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T12:58:57.771Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T15:58:00.089Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T15:58:00.093Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T15:58:00.097Z"}
{"cause":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{"localhost:27017":{"$clusterTime":null,"address":"localhost:27017","arbiters":[],"electionId":null,"error":{"beforeHandshake":false,"errorLabelSet":{}},"hosts":[],"iscryptd":false,"lastUpdateTime":10434476,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxBsonObjectSize":null,"maxMessageSizeBytes":null,"maxWireVersion":0,"maxWriteBatchSize":null,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"}},"setName":null,"stale":false,"type":"Unknown"},"errorLabelSet":{},"level":"error","message":"MongoDB connection failed connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{"localhost:27017":{"$clusterTime":null,"address":"localhost:27017","arbiters":[],"electionId":null,"error":{"beforeHandshake":false,"errorLabelSet":{}},"hosts":[],"iscryptd":false,"lastUpdateTime":10434476,"lastWriteDate":0,"logicalSessionTimeoutMinutes":null,"maxBsonObjectSize":null,"maxMessageSizeBytes":null,"maxWireVersion":0,"maxWriteBatchSize":null,"me":null,"minRoundTripTime":0,"minWireVersion":0,"passives":[],"primary":null,"roundTripTime":-1,"setName":null,"setVersion":null,"tags":{},"topologyVersion":null,"type":"Unknown"}},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017\n    at _handleConnectionErrors (D:\\odoo-hackathon\\backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n    at NativeConnection.openUri (D:\\odoo-hackathon\\backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n    at async connectDB (D:\\odoo-hackathon\\backend\\utils\\db.js:7:9)","timestamp":"2025-07-12T03:08:56.204Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-07-12T04:34:37.223Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-07-12T04:34:37.251Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-07-12T04:34:37.269Z"}
{"_message":"User validation failed","errors":{"name":{"kind":"required","message":"Path `name` is required.","name":"ValidatorError","path":"name","properties":{"message":"Path `name` is required.","path":"name","type":"required"}}},"level":"error","message":"Error registering user: User validation failed: name: Path `name` is required.","stack":"ValidationError: User validation failed: name: Path `name` is required.\n    at Document.invalidate (D:\\Odoo_Hackathon\\backend\\node_modules\\mongoose\\lib\\document.js:3343:32)\n    at D:\\Odoo_Hackathon\\backend\\node_modules\\mongoose\\lib\\document.js:3104:17\n    at D:\\Odoo_Hackathon\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)","timestamp":"2025-07-12T04:38:38.778Z"}
{"level":"error","message":"ValidationError: User validation failed: name: Path `name` is required.\n    at Document.invalidate (D:\\Odoo_Hackathon\\backend\\node_modules\\mongoose\\lib\\document.js:3343:32)\n    at D:\\Odoo_Hackathon\\backend\\node_modules\\mongoose\\lib\\document.js:3104:17\n    at D:\\Odoo_Hackathon\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)","timestamp":"2025-07-12T04:38:38.787Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-07-12T04:39:13.744Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-07-12T04:39:13.749Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-07-12T04:39:13.754Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-07-12T05:38:56.025Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-07-12T05:38:56.049Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-07-12T05:38:56.059Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-07-12T05:41:04.663Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-07-12T05:41:04.668Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-07-12T05:41:04.674Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-07-12T05:43:36.534Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-07-12T05:43:36.538Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-07-12T05:43:36.542Z"}
{"level":"error","message":"MulterError: Unexpected field\n    at wrappedFileFilter (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\index.js:40:19)\n    at Multipart.<anonymous> (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\lib\\make-middleware.js:121:7)\n    at Multipart.emit (node:events:519:28)\n    at HeaderParser.cb (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:358:14)\n    at HeaderParser.push (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:162:20)\n    at SBMH.ssCb [as _cb] (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:394:37)\n    at feed (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:248:10)\n    at SBMH.push (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:104:16)\n    at Multipart._write (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:567:19)\n    at writeOrBuffer (node:internal/streams/writable:570:12)","timestamp":"2025-07-12T05:50:01.595Z"}
{"level":"error","message":"MulterError: Unexpected field\n    at wrappedFileFilter (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\index.js:40:19)\n    at Multipart.<anonymous> (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\lib\\make-middleware.js:121:7)\n    at Multipart.emit (node:events:519:28)\n    at HeaderParser.cb (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:358:14)\n    at HeaderParser.push (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:162:20)\n    at SBMH.ssCb [as _cb] (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:394:37)\n    at feed (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:200:10)\n    at SBMH.push (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:104:16)\n    at Multipart._write (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:567:19)\n    at writeOrBuffer (node:internal/streams/writable:570:12)","timestamp":"2025-07-12T05:52:03.029Z"}
{"level":"error","message":"MulterError: Unexpected field\n    at wrappedFileFilter (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\index.js:40:19)\n    at Multipart.<anonymous> (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\lib\\make-middleware.js:121:7)\n    at Multipart.emit (node:events:519:28)\n    at HeaderParser.cb (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:358:14)\n    at HeaderParser.push (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:162:20)\n    at SBMH.ssCb [as _cb] (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:394:37)\n    at feed (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:248:10)\n    at SBMH.push (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:104:16)\n    at Multipart._write (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:567:19)\n    at writeOrBuffer (node:internal/streams/writable:570:12)","timestamp":"2025-07-12T05:53:00.153Z"}
{"level":"error","message":"MulterError: Unexpected field\n    at wrappedFileFilter (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\index.js:40:19)\n    at Multipart.<anonymous> (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\lib\\make-middleware.js:121:7)\n    at Multipart.emit (node:events:519:28)\n    at HeaderParser.cb (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:358:14)\n    at HeaderParser.push (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:162:20)\n    at SBMH.ssCb [as _cb] (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:394:37)\n    at feed (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:248:10)\n    at SBMH.push (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:104:16)\n    at Multipart._write (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:567:19)\n    at writeOrBuffer (node:internal/streams/writable:570:12)","timestamp":"2025-07-12T05:55:15.453Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-07-12T06:02:17.759Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-07-12T06:02:17.766Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-07-12T06:02:17.778Z"}
{"level":"error","message":"MulterError: Unexpected field\n    at wrappedFileFilter (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\index.js:40:19)\n    at Multipart.<anonymous> (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\lib\\make-middleware.js:121:7)\n    at Multipart.emit (node:events:519:28)\n    at HeaderParser.cb (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:358:14)\n    at HeaderParser.push (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:162:20)\n    at SBMH.ssCb [as _cb] (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:394:37)\n    at feed (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:248:10)\n    at SBMH.push (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:104:16)\n    at Multipart._write (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:567:19)\n    at writeOrBuffer (node:internal/streams/writable:570:12)","timestamp":"2025-07-12T06:02:35.723Z"}
{"level":"error","message":"MulterError: Unexpected field\n    at wrappedFileFilter (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\index.js:40:19)\n    at Multipart.<anonymous> (D:\\Odoo_Hackathon\\backend\\node_modules\\multer\\lib\\make-middleware.js:121:7)\n    at Multipart.emit (node:events:519:28)\n    at HeaderParser.cb (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:358:14)\n    at HeaderParser.push (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:162:20)\n    at SBMH.ssCb [as _cb] (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:394:37)\n    at feed (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:200:10)\n    at SBMH.push (D:\\Odoo_Hackathon\\backend\\node_modules\\streamsearch\\lib\\sbmh.js:104:16)\n    at Multipart._write (D:\\Odoo_Hackathon\\backend\\node_modules\\busboy\\lib\\types\\multipart.js:567:19)\n    at writeOrBuffer (node:internal/streams/writable:570:12)","timestamp":"2025-07-12T06:02:40.238Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-07-12T06:04:16.478Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-07-12T06:04:16.485Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-07-12T06:04:16.496Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-07-12T06:10:37.621Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-07-12T06:10:37.628Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-07-12T06:10:37.640Z"}
{"level":"error","message":"Error fetching items by uploader ID: less is not defined","stack":"ReferenceError: less is not defined\n    at getAllItems (D:\\Odoo_Hackathon\\backend\\controllers\\itemController.js:141:5)\n    at Layer.handleRequest (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\Odoo_Hackathon\\backend\\node_modules\\router\\index.js:295:15\n    at param (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\index.js:600:14)\n    at param (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\index.js:610:14)\n    at processParams (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\index.js:664:3)","timestamp":"2025-07-12T06:11:08.906Z"}
{"level":"error","message":"ReferenceError: less is not defined\n    at getAllItems (D:\\Odoo_Hackathon\\backend\\controllers\\itemController.js:141:5)\n    at Layer.handleRequest (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\Odoo_Hackathon\\backend\\node_modules\\router\\index.js:295:15\n    at param (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\index.js:600:14)\n    at param (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\index.js:610:14)\n    at processParams (D:\\Odoo_Hackathon\\backend\\node_modules\\router\\index.js:664:3)","timestamp":"2025-07-12T06:11:08.909Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-07-12T06:11:43.599Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-07-12T06:11:43.607Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-07-12T06:11:43.617Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-07-12T06:19:33.962Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-07-12T06:19:33.974Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-07-12T06:19:33.983Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-07-12T06:21:54.236Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-07-12T06:21:54.251Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-07-12T06:21:54.265Z"}
